#!/bin/bash
# Add repository secret from data on stdin
#
# Dependencies:
# - ruby
# - gem install rbnacl
set -eu

usage() {
  echo "usage: gh secrets add <name>"
}

if [ $# -eq 0 ]; then
  usage >&2
  exit 1
fi

if [ "${1:-}" = "__complete" ]; then
  printf "add\tAdd a repository secret\n"
  printf "list\tList repository secrets\n"
  exit 0
fi

list() {
  gh api "repos/${GH_BASEREPO}/actions/secrets" | jq -r '.secrets[].name'
}

add() {
  local name="${1?}"
  local public_key
  public_key="$(gh api "repos/${GH_BASEREPO}/actions/secrets/public-key")"

  ruby -e '
    require "rbnacl"
    require "base64"

    key = Base64.decode64(ARGV[0])
    public_key = RbNaCl::PublicKey.new(key)

    box = RbNaCl::Boxes::Sealed.from_public_key(public_key)
    encrypted_secret = box.encrypt(STDIN.read)

    puts Base64.strict_encode64(encrypted_secret)
  ' -- "$(jq -r '.key' <<<"$public_key")" | \
    gh api -XPUT "repos/${GH_BASEREPO}/actions/secrets/$name" \
      -F encrypted_value=@- \
      -f key_id="$(jq -r '.key_id' <<<"$public_key")" >/dev/null
}

cmd="${1:-}"
case "$cmd" in
add | list )
  shift 1
  "$cmd" "$@"
  ;;
* )
  usage >&2
  exit 1
  ;;
esac
